{"version":3,"file":"component---src-pages-index-js-1ac92219eae12cde1d93.js","mappings":"uwCAqEA,UAnDkB,WAChB,QAA0BA,EAAAA,SACxBC,GAAAA,CADF,2BAIA,GAJA,UAIA,GAAuBC,EAAAA,EAAAA,UAAvB,QAAOC,EAAP,KAAYC,EAAZ,KACA,KAA0BF,EAAAA,EAAAA,UAA1B,OAAOG,EAAP,KAAcC,EAAd,KACA,KAAwBJ,EAAAA,EAAAA,UAAxB,OAAOK,EAAP,KAAaC,EAAb,KACMC,GAAQC,EAAAA,EAAAA,MACEC,EAAAA,EAAAA,GAAcF,EAAAA,YAAAA,GAA9B,OAKA,OACE,0BACE,cAAKG,MAAM,UAEX,cAAKC,QAAL,OAAoBC,eAApB,SAA4CC,cAA5C,mBACE,eAAsBC,YAAtB,eACE,cAAKC,GAAI,CAAEC,UAAW,UAAYJ,eAAlC,mBAA0D,4CAC1D,cAAKD,QAAL,OAAoBC,eAApB,SAA4CC,cAA5C,gBACE,cAAYI,OAAQ,SAAAC,GAClB,IAAQjB,EAAqBiB,EAA7B,IAAaf,EAAgBe,EAA7B,MAAoBb,EAASa,EAA7B,KACAC,QAAAA,IAAAA,GACAjB,EAAQD,EAARC,YACAE,EAASD,EAATC,YACAE,EAAQD,EAARC,uBASR,cACEc,SAAU,cAGVC,SAAU,CACRpB,IAAK,GAAF,OAAKA,EAAAA,SAAAA,EADA,MAERE,MAAO,GAAF,OAAKA,EAAAA,SAAAA,EAFF,MAGRE,KAAM,GAAF,OAAKA,EAAAA,SAAAA,EAAL","sources":["webpack://gatsby-redux-material-ui-boilerplate/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby-theme-material-ui\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Box from '@mui/material/Box';\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport dayjs, { Dayjs } from 'dayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport LifeNumber from \"../components/LifeNumber\"\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport TextField from '@mui/material/TextField';\nimport { useTheme } from '@mui/material/styles';\nimport { useState } from 'react'\nimport DatePicker from '../components/DatePicker'\n\nconst IndexPage = () => {\n  const [value, setValue] = React.useState(\n    dayjs('1988-09-14T12:00:01'),\n  );\n\n  const [day, setDate] = useState('')\n  const [month, setMonth] = useState('')\n  const [year, setYear] = useState('')\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up('sm'));\n  const handleChange = (newValue) => {\n    console.log(newValue)\n    setValue(newValue);\n  };\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n\n      <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\">\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <Box sx={{ textAlign: 'center' }} justifyContent=\"center\"><h1> Life Number</h1></Box>\n          <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"row\">\n            <DatePicker onDate={e => {\n              const { day, month, year } = e;\n              console.log(e)\n              setDate(day.toString())\n              setMonth(month.toString())\n              setYear(year.toString())\n            }} />\n          </Box>\n\n        </LocalizationProvider>\n\n      </Box>\n\n\n      <LifeNumber\n        onNumber={(numbers) => {\n\n        }}\n        birthday={{\n          day: `${day.padStart(2, '0')}`,\n          month: `${month.padStart(2, '0')}`,\n          year: `${year.padStart(4, '0')}`,\n        }}\n      />\n\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["React","dayjs","useState","day","setDate","month","setMonth","year","setYear","theme","useTheme","useMediaQuery","title","display","justifyContent","flexDirection","dateAdapter","sx","textAlign","onDate","e","console","onNumber","birthday"],"sourceRoot":""}